컨트롤러 : 일치하는 URL이 있는지 확인하여 있으면 해당 코드를 실행
(없으면 404 에러가 남)

src/main/webapp : 스프링의 기본이 되는 폴더
src/main/webapp/resources - css/js/이미지등을 관리하는 폴더
src/main/webapp/WEB_INF/spring - 스프링 설정 파일이 있는 폴더
src/main/webapp/WEB_INF/views - 화면 파일(jsp)이 있는 폴더
	- jsp : java 코드?를 html파일에 쓸 수 있도록 한 파일
pom.xml - 필요한 기능을 연결(설치)하기 위한 파일

스프링? 자바로 된 웹개발 프레임워크
 - MVC 모델로 되어있어 개발이 용이
 - M : model => DB에 있는 정보를 Model을 통해 주고 받음
 - V : view=> 화면
 - C : controller

-gitignore : git으로 파일을 관리할 때, 신경안쓰고자 하는 파일을 gitignore에 입력하면
	파일 내용이 바뀌어도 git에 뜨지 않게 하는 파일



localhose:8080/spring/test/test 		
=> /test/test의 value를 가진 메소드가 실행

localhose:8080/spring?name=홍길동 		
=> /  (뒤에있는 ?는 form태그에 감싸져있는 태그들의 전송값)

localhose:8080/spring/test/test?name=홍길동 	
=> /test/test


- @RequestMapping 에 method가 지정되어 있으면 해당 방식만 처리,
 생략되어 있으면, GET/POST 둘 다 처리
- 화면을 보여주려면 기본이 GET

- 새로운 URI를 추가하려면
 1. Controller에서 @RequestMapping이 포함된 메소드를 추가한 후, 
    value에 원하는 URI경로로 수정, 메소드 return부분에 원하는 화면을 연결
 2. views 폴더에 연결한 jsp를 추가
 
- 서버에서 화면으로 원하는 정보를 보내는 방법
 1. ModelAndView클래스에서 제공하는 .addObject("화면에서 쓸 이름","보낼 데이터")를 이용하여 데이터를 전송
 2. 화면에서는 ${화면에서 쓸 이름}으로 데이터를 받아서 처리


- 화면에서 서버로 원하는 정보를 보내는 방법1(a태그(URI)를 이용하는 방법)
 1. a태그를 이용하여 원하는 URI를 지정 후, ?다음에 정보를 전달한다.
 예) localhose:8080/spring/signin?id=abc123&pw=abc123 

- 화면에서 서버로 원하는 정보를 보내는 방법2(form태그를 이용하는 방법)
 1. 화면에서는 form태그에 input태그와 버튼을 이용하여 정보를 입력 후, 
  전송버튼을 이용하여 정보를 전달 
(HomeController.java파일에서 매개변수 이름과 home.jsp파일의 input태그의 name=이름과 일치시켜야 함)

 - 서버에서는 메소드의 매개변수로 해당 정보를 받아옴.

- 화면에서 서버로 데이터를 보낼 때, 매개변수가 일반 변수나 클래스인 경우(String, Integer, Int 등)는
   매개변수 명을 화면의 name과 맞춘다
- 매개변수가 클래스의 객체인 경우는 매개변수의 멤버변수명과 화면의 name을 맞춘다


-----------------
URI 
→컨트롤러
→ (구현하는 인터페이스  : 서비스 - 서비스Imp클래스)
→(Dao인터페이스 - xxxMapper.xml) 
→데이터베이스
→(Dao인터페이스 - xxxMapper.xml) 
→ (구현하는 인터페이스  : 서비스 - 서비스Imp클래스)
→컨트롤러
→ URI 
---------------------
xml파일에서 #{}와 ${}의 차이
#{} : '값'  ⇒ 값을 기준으로 ''를붙여서 문자열 취급을 한다
${} : 값으로 변수(속성명)로 인식
-----------------
xml파일에서 쿼리문 작성방법

<태그명 id = "" resultType="">
	쿼리
</태그명>

*태그명: select, insert, update, delete로 원하는 쿼리문에 맞게 태그명을 선정
*id :dao의 메소드명과 일치
*resultType : 태그명이 select일 때만 사용함(리턴타입을 의미)
