day17

String 클래스=> ""로 된 문자열 상수에서도 사용 가능
 - charAt(번지) 			: 문자열에서 번지에 해당하는 문자를 알려주는 메소드
 							예) charAt(0)	=> 문자열에서 0번지에 해당하는 문자를 알려주는 메소드
 							*체이닝 : 메소드를 연속해서 사용하는 것=> 예: scan.*next().charAt(0);*       **안에 메소드 연달아나옴
 							
 - equals(문자열) 		: 두 문자열이 같은지 알려주는 메소드	=>결과값이 boolean 참 거짓으로 나옴
 - indexOf(문자열A) 		: 문자열에서 문자열 A가 어디에있는지 번지를 알려주는 메소드. 없으면 -1	=> 결과값이 int로 1, -1로 나옴
 - length() 			: 문자열의 길이를 알려주는 메소드 (*뒤에 괄호()있는것을잊지마, 배열은 arr.length 처럼 괄호가 없음)
 - replace()			: 문자열에서 A와 일치하는 곳을 B로 교체한 문자열을 알려주는 메소드, 원본은 바뀌지 않음(바꾸려면 따로 저장해주는 코드 써주면 됨).
 							예) replace(A, B)
 - substring(index)		: index번지부터 끝까지 부분 문자열을 생성/ 기존 문자열을 수정하는 것이 아니라 새로운 부분 문자열을 생성
 - substring(begin,end)	: begin번지부터 end번지 전까지 부분 문자열을 생성/ 기존 문자열을 수정하는 것이 아니라 새로운 부분 문자열을 생성
 - toLowerCase() 		: 영문 문자열을 전부 소문자로
 - toUpperCase()		: 영문 문자열을 전부 대문자로
 - trim()				: 앞/뒤 공백을 제거하는 객체 메소드	
 - valueOf(기본타입)		: 기본타입값을 문자열로 변경해주는 클래스 메소드
 - split(패턴)			: 문자열 패턴을 기준으로 부분 문자열들로 나눈 후, 배열로 만듬							
 - compareTo(문자열)		: 두 문자열이 같은지를 비교하여 같으면 0, 다르면 사전순에 따라 1 또는 -1을 반환 => 값이 3개
							생김새) 문자열A.compareTo(문자열B)
		 					결과값) -1 : 문자열 A가 사전순으로 앞
		   						   0 : 문자열 A,B가 같음
								   1 : 문자열 A가 사전순으로 뒤
 - contains(문자열)		: 해당 문자열이 포함되어있는지 아닌지 알려주는 메소드 결과값이 boolean 참 거짓으로 나옴

혼공자(498p)
래퍼(Wrapper) 포장 클래스
 - 기본타입을 클래스로 만든 것
 - 기본타입의 값과 null을 저장 할 수 있는 클래스이다. => null값을 저장할 수 있다 => "참조변수"
 - 나중에 컬렉션 프레임워크나 제네릭 클래스에서 기본타입이 아닌 클래스가 꼭 필요한 경우가 있다. 이때, 래퍼클래스를 사용한다. 
 - 기본타입과 포장클래스의 생김새 차이
	기본타입						포장클래스
	char						Character
	int							Integer
	(소문자시작)					(대문자시작)
	byte,short,long,			Byte,Short,Long
	float, double, boolean		Float,Double,Boolean	

 - 문자열을 기본 타입 값으로 변환
	메소드생김새: 포장클래스타입.parse+기본타입이름
		예)	byte num = Byte.parseByte("10") => 포장클래스였던 문자열 "10"을 기본타입 byte로 num라는 변수에 저장












	
	 